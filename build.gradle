/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.4.1/userguide/tutorial_groovy_projects.html
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'eclipse'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.11'

    // Use the awesome Spock testing and specification framework
    //testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'

    // https://mvnrepository.com/artifact/log4j/log4j
    //implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.23.1'


    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    //implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'

    // https://mvnrepository.com/artifact/de.odysseus.staxon/staxon
    implementation group: 'de.odysseus.staxon', name: 'staxon', version: '1.3'


    // https://github.com/networknt/json-schema-validator
    implementation group: "com.networknt", name: "json-schema-validator", version: "1.0.73"

    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.21.12'

    //implementation fileTree(dir: 'lib', include: ['*.jar'])

    // json serialization for tests that handles loops correctly
    testImplementation group: 'com.cedarsoftware', name: 'json-io', version: '4.13.0'
}

application {
    // Define the main class for the application.
    mainClass = 'com.cabolabs.openehr.opt.Main'
}

/*
test {
   debug = true
   // Optionally set a specific port
   jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
}
*/

/*
sourceSets {
   main {
       groovy {
           srcDirs = ['src/main/groovy']
       }
       resources {
           srcDirs = ['src/main/resources']
       }
   }
   test {
       groovy {
           srcDirs = ['src/test/groovy']
       }
       resources {
           srcDirs = ['src/test/resources']
       }
   }
}
*/

